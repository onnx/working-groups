(**
    Specification of Pow operation on tensors with real numbers.
 *)
module Pow
  use int.Int
  use map.Map
  use tensor.Shape
  use tensor.Tensor
  use real.Real
  (** Define the pow function *)
  let function pow (base : real) (exponent : real) : real =
    ensures { result = base ** exponent }
  {
    base ** exponent
  }
  (** Define the pow operation on a tensor **)
  let function pow_tensor (base_tensor : tensor real) (exponent_tensor : tensor real) : tensor real =
    requires { same_shape base_tensor exponent_tensor }
    ensures { forall i. result.value[i] = pow (base_tensor.value[i]) (exponent_tensor.value[i]) }
  {
    shape = base_tensor.shape ;
    value = fun i -> pow (base_tensor.value[i]) (exponent_tensor.value[i]) ;
  }
end